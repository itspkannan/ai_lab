server {
    listen 8000;

    resolver 127.0.0.11 ipv6=off;

    location /api/generate {
        access_by_lua_block {
            local ok, err = pcall(function()
                local http = require "resty.http"
                local cjson = require "cjson.safe"

                ngx.req.read_body()
                local body_data = ngx.req.get_body_data()
                ngx.log(ngx.ERR, "[Proxy] Received body: ", body_data or "nil")

                local decoded = cjson.decode(body_data or "")
                if not decoded or not decoded.prompt then
                    ngx.status = 400
                    ngx.say("Missing or invalid prompt")
                    return ngx.exit(400)
                end

                ngx.log(ngx.ERR, "[Proxy] Validated prompt: ", decoded.prompt)

                local httpc = http.new()
                local res, err = httpc:request_uri("http://security_service:8181/v1/data/itspkannan/security/allow", {
                    method = "POST",
                    body = cjson.encode({ input = { prompt = decoded.prompt } }),
                    headers = { ["Content-Type"] = "application/json" }
                })

                if not res then
                    ngx.status = 500
                    ngx.say("OPA validation failed: ", err)
                    ngx.log(ngx.ERR, "[Proxy] OPA call failed: ", err)
                    return ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
                end

                ngx.log(ngx.ERR, "[Proxy] OPA response body: ", res.body)

                local result = cjson.decode(res.body)
                if not result or not result.result then
                    ngx.status = 403
                    ngx.say("Prompt rejected by OPA")
                    ngx.log(ngx.ERR, "[Proxy] Prompt rejected: ", res.body)
                    return ngx.exit(403)
                end

                ngx.log(ngx.ERR, "[Proxy] Prompt allowed, forwarding to LLM")
            end)

            if not ok then
                ngx.status = 500
                ngx.say("Internal server error: ", err)
                ngx.log(ngx.ERR, "[Proxy] Lua crash: ", err)
                return ngx.exit(500)
            end
        }

        proxy_pass http://llm_service:11434;
        proxy_pass_request_body on;
        proxy_set_header Content-Type application/json;
    }
}
